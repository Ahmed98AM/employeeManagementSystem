[{"D:\\Course Materiel\\Web Dev Course\\Web Projects\\Training Projects\\taskone\\src\\index.js":"1","D:\\Course Materiel\\Web Dev Course\\Web Projects\\Training Projects\\taskone\\src\\App.js":"2","D:\\Course Materiel\\Web Dev Course\\Web Projects\\Training Projects\\taskone\\src\\components\\navbar.component.js":"3","D:\\Course Materiel\\Web Dev Course\\Web Projects\\Training Projects\\taskone\\src\\components\\create-exercise.component.js":"4","D:\\Course Materiel\\Web Dev Course\\Web Projects\\Training Projects\\taskone\\src\\components\\employees-list.component.js":"5","D:\\Course Materiel\\Web Dev Course\\Web Projects\\Training Projects\\taskone\\src\\components\\create-employee.component.js":"6","D:\\Course Materiel\\Web Dev Course\\Web Projects\\Training Projects\\taskone\\src\\components\\edit-employee.component.js":"7"},{"size":168,"mtime":1650680799425,"results":"8","hashOfConfig":"9"},{"size":849,"mtime":1650666959225,"results":"10","hashOfConfig":"9"},{"size":1481,"mtime":1650660630035,"results":"11","hashOfConfig":"9"},{"size":3659,"mtime":1650663715784,"results":"12","hashOfConfig":"13"},{"size":2208,"mtime":1650666990495,"results":"14","hashOfConfig":"9"},{"size":3076,"mtime":1650664390980,"results":"15","hashOfConfig":"9"},{"size":4176,"mtime":1650682433909,"results":"16","hashOfConfig":"9"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1o02erg",{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oirt3k",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Course Materiel\\Web Dev Course\\Web Projects\\Training Projects\\taskone\\src\\index.js",[],["33","34"],"D:\\Course Materiel\\Web Dev Course\\Web Projects\\Training Projects\\taskone\\src\\App.js",[],"D:\\Course Materiel\\Web Dev Course\\Web Projects\\Training Projects\\taskone\\src\\components\\navbar.component.js",[],"D:\\Course Materiel\\Web Dev Course\\Web Projects\\Training Projects\\taskone\\src\\components\\create-exercise.component.js",[],"D:\\Course Materiel\\Web Dev Course\\Web Projects\\Training Projects\\taskone\\src\\components\\employees-list.component.js",["35","36"],"import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Employee = (props) => (\n  <tr>\n    <td>{props.employee.name}</td>\n    {props.employee.attended ? <td>Attended</td> : <td>Did not attend</td>}\n\n    <td>\n      {props.employee.attendDate\n        ? props.employee.attendDate.substring(0, 10)\n        : \"\"}\n    </td>\n    <td>\n      <Link to={\"edit/\" + props.employee._id}>edit</Link> |{\" \"}\n      <a\n        href=\"#\"\n        onClick={() => {\n          props.deleteEmployee(props.employee._id);\n        }}\n      >\n        delete\n      </a>\n    </td>\n  </tr>\n);\nexport default class EmployeeList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteEmployee = this.deleteEmployee.bind(this);\n\n    this.state = { employees: [] };\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await axios({\n        method: \"GET\",\n        url: `http://localhost:5000/api/employees`,\n      });\n      console.log(res.data.data.doc);\n      this.setState({ employees: res.data.data.doc });\n    } catch (err) {\n      // showAlert(\"error\", \"Something went Wrong!\");\n      console.log(err.response.data.message);\n      alert(err.response.data.message);\n    }\n  }\n\n  async deleteEmployee(id) {\n    try {\n      const res = await axios({\n        method: \"DELETE\",\n        url: `http://localhost:5000/api/employees/${id}`,\n      });\n    } catch (err) {\n      // showAlert(\"error\", \"Something went Wrong!\");\n      alert(err);\n    }\n\n    this.setState({\n      employees: this.state.employees.filter((el) => el._id !== id),\n    });\n  }\n\n  employeeList() {\n    return this.state.employees.map((emp) => {\n      return (\n        <Employee\n          employee={emp}\n          deleteEmployee={this.deleteEmployee}\n          key={emp._id}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Employee Name</th>\n              <th>Attendance Status</th>\n              <th>Attendance Date</th>\n            </tr>\n          </thead>\n          <tbody>{this.employeeList()}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","D:\\Course Materiel\\Web Dev Course\\Web Projects\\Training Projects\\taskone\\src\\components\\create-employee.component.js",[],"D:\\Course Materiel\\Web Dev Course\\Web Projects\\Training Projects\\taskone\\src\\components\\edit-employee.component.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":17,"column":7,"nodeType":"43","endLine":22,"endColumn":8},{"ruleId":"44","severity":1,"message":"45","line":54,"column":13,"nodeType":"46","messageId":"47","endLine":54,"endColumn":16},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]